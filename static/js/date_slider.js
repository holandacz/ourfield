// Generated by CoffeeScript 1.2.1-pre
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  window.DateSliderView = (function(_super) {

    __extends(DateSliderView, _super);

    DateSliderView.name = 'DateSliderView';

    function DateSliderView() {
      return DateSliderView.__super__.constructor.apply(this, arguments);
    }

    DateSliderView.prototype.initialize = function() {
      return App.bind("change:currentDate", function() {
        var year;
        year = this.currentYear();
        this._slider.slider("value", year);
        return this.renderDate(year);
      }, this);
    };

    DateSliderView.prototype.currentYear = function() {
      return App.currentDate.getFullYear();
    };

    DateSliderView.prototype.minYear = function() {
      return this.options.minDate.getFullYear();
    };

    DateSliderView.prototype.maxYear = function() {
      return this.options.maxDate.getFullYear();
    };

    DateSliderView.prototype.renderDate = function(year) {
      return this.$('#date').text(year);
    };

    DateSliderView.prototype.render = function() {
      var year,
        _this = this;
      year = this.currentYear();
      this.renderDate(year);
      this.$('#min-date').text(this.minYear());
      this.$('#max-date').text(this.maxYear());
      return this._slider = this.$('#slider').slider({
        value: year,
        min: this.minYear(),
        max: this.maxYear(),
        step: 1,
        slide: function(evt, ui) {
          return _this.renderDate(ui.value);
        },
        stop: function(evt, ui) {
          return App.setCurrentYear(ui.value);
        }
      });
    };

    return DateSliderView;

  })(Backbone.View);

}).call(this);
