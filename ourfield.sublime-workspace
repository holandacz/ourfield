{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"col",
				"Collection"
			],
			[
				"mar",
				"markerno"
			],
			[
				"clo",
				"closestPlace"
			],
			[
				"InfoWindow",
				"editInfoWindow"
			],
			[
				"js",
				"jsapp"
			],
			[
				"get",
				"get_point"
			]
		]
	},
	"buffers":
	[
		{
			"file": "private/py/closestpt.py",
			"settings":
			{
				"buffer_size": 2511,
				"line_ending": "Windows"
			}
		},
		{
			"file": "static/js/calcmarkerno.coffee",
			"settings":
			{
				"buffer_size": 3318,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/map/base.html",
			"settings":
			{
				"buffer_size": 3566,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "class @Preferences\n  constructor: ->\n    @cookieName = \"preferences\"\n    @items = {}\n    @load()\n\n  load: ->\n    rawValue = $.cookie(@cookieName)\n    if rawValue\n      @items = JSON.parse(rawValue)\n\n  save: ->\n    $.cookie(@cookieName, JSON.stringify(@items), expires: 365)\n\n  get: (key) ->\n    @items[key]\n\n  set: (key, value) ->\n    @items[key] = value\n    @save()\n\n  setDefault: (key, defaultValue) ->\n    @items[key] = defaultValue unless @items[key]\n    @save()\n\nclass @MapView extends Backbone.View\n  events:\n    'click input[type=\"checkbox\"]': '_togglePlaceType'\n    'click button#add-place': '_addPlace'\n\n  initialize: ->\n    @preferences = @options.preferences\n    @collection.bind 'sync', => \n      @collection.fetch()\n    @render()\n\n  render: ->\n    console.log @preferences.items\n\n    @map = new google.maps.Map @$('#map-canvas').get(0),\n      zoom: @preferences.get('zoom')\n      center: new google.maps.LatLng(@model.get('centerLat'), @model.get('centerLng'))\n      mapTypeId: @model.get('mapTypeId')\n\n    google.maps.event.addListener @map, 'zoom_changed', =>\n      @preferences.set('zoom', @map.getZoom())\n\n    @userid = @model.get('userid')\n\n\n\n      # window.placeTypes.models[0].places.add({id:3, point: 'POINT (10.001 -84.134)'})\n      # make into a function: @addPlace(event)\n\n    # google.maps.event.addListener @map, \"click\", => @addPlace()\n    # location: event.latLng\n    # centered: false\n\n    if @userid > 0\n      @collection.each (placeType) =>\n        new PlaceTypeView(model: placeType, collection: placeType.places, map: @map)\n\n      @$('input[type=\"checkbox\"]:checked').each (index, el) =>\n        model = @collection.get($(el).val())\n        model.show()\n\n\n\n  _togglePlaceType: (e) ->\n    inputEl = @$(e.target)\n    model = @collection.get(inputEl.val())\n    if inputEl.is(\":checked\")\n      model.show()\n    else\n      model.hide()\n\n  _addPlace: (e) ->\n    console.log \"_addPlace\", e\n    lat = @map.getCenter().lat()\n    lng = @map.getCenter().lng()\n    console.log lat, lng\n    @collection.get(1).places.create(point: \"POINT (#{lat} #{lng})\")\n\nclass @PlaceTypeView extends Backbone.View\n  initialize: ->\n    @map = @options.map\n    @model.bind 'show', @show\n    @model.bind 'hide', @hide\n    @render()\n\n  render: ->\n    @placesView = new PlacesView(collection: @collection, map: @map)\n\n  show: =>\n    @collection.fetch()\n\n  hide: =>\n\nclass @PlacesView extends Backbone.View\n  initialize: ->\n    @map = @options.map\n    @placeItemViews = []\n    @collection.bind 'add', @addPlaceItemView\n    # @collection.bind 'sync', =>\n    #   @collection.fetch()\n    @collection.bind 'reset', @render\n    @render() if @collection.length > 0\n\n  render: =>\n    _.each @placeItemViews, (placeItemView) =>\n      placeItemView.hide()\n    @placeItemViews = []\n    @collection.each @addPlaceItemView\n\n  addPlaceItemView: (place) =>\n    place.bind 'sync', =>\n      @collection.fetch()\n    @placeItemViews.push(new PlaceItemView(model: place, map: @map))\n\nclass @PlaceItemView extends Backbone.View\n  initialize: ->\n    @map = @options.map\n    @model.bind 'show', @show\n    @model.bind 'hide', @hide\n\n    # LWE added to try to refresh inforwindow\n    @model.bind 'sync', @show\n    @render()\n\n  render: ->\n    @marker = new google.maps.Marker(\n      draggable: true\n    )\n\n    google.maps.event.addListener @marker, \"dragend\", @dragend\n    google.maps.event.addListener @marker, \"click\", @click\n\n    @show()\n\n  dragend: =>\n    if confirm(\"Are you sure you want to move this marker?\")\n      @model.set(lat:  @marker.position.lat(), lng: @marker.position.lng())\n      # get newMarkerno(asadsasdf)\n      @model.save()\n    else\n      # move back to original position\n      @marker.setPosition( new google.maps.LatLng(@model.get('lat'), @model.get('lng')))\n\n  show: =>\n    @position = new google.maps.LatLng(@model.get('lat'), @model.get('lng'))\n    @marker.setPosition(@position)\n\n    title = 'P' + @model.get('id')\n    if @model.get('interestlevel')\n      title += \" - INTEREST \" + @model.get('interestlevel')\n\n    if @model.get('territoryno')\n      title += \" - TERRITORY# \" + @model.get('territoryno')\n\n    if @model.get('markerno')\n      title += \" - MARKER# \" + @model.get('markerno')\n\n    if @model.get('blockno')\n      title += \" - BLOCK# \" + @model.get('blockno')\n\n    if @model.get('houseno')\n      title += \" - HOUSE# \" + @model.get('houseno')\n\n    if @model.get('description')\n      title += \"\\n\\n\" + \"DESCRIPTION\\n\" + @model.get('description')\n\n    # code to show languages with a number in front of language code\n\n    if @model.get('persons')\n      title += \"\\n\\n\" + \"PERSONS\\n\" + @model.get('persons')\n\n    if @model.get('actions')\n      title += \"\\n\\n\" + \"ACTIONS\\n\" + @model.get('actions')\n\n    if @model.get('notes')\n      title += \"\\n\\n\" + \"NOTES\\n\" + @model.get('notes')\n\n    @marker.setTitle(title)\n\n    if @model.get('markerno')\n      @marker.setIcon('/site_media/static/img/mapicons/25x30/numbers/number_' +  @model.get('markerno') + '.png')\n    else\n      @marker.setIcon('/site_media/static/img/mapicons/25x30/symbol_blank.png')\n    \n    @marker.setMap(@map)\n\n  hide: =>\n    @marker.setMap(null)\n\n  click: =>\n    @infoWindow = new InfoWindow(model: @model)\n\nclass InfoWindow extends Backbone.View\n  template: _.template($('#info-window-template').html())\n\n  editTemplate: _.template($('#edit-info-window-template').html())\n\n  className: 'modal'\n\n  events:\n    'click a.delete': '_delete'\n    'click a.edit': '_edit'\n    'click a.view': '_view'\n    'click a.save-continue': '_saveContinue'\n    'click a.save': '_save'\n\n  initialize: ->\n    @editing = false\n    @render()\n\n  render: ->\n    if @editing\n      @$el.html(@editTemplate(model: @model))\n    else\n      @$el.html(@template(model: @model))\n    @$el.modal('show')\n\n  _edit: ->\n    @editing = true\n    @render()\n\n  _delete: ->\n    if confirm(\"Are you sure you want to delete this place?\")\n      @model.bind 'destroy', =>\n        @$el.modal('hide')\n      @model.destroy()\n\n  _view: ->\n    if confirm(\"Are you sure you want to abandon edit?\")\n      @editing = false\n      @render()\n\n  _saveContinue: ->\n    @persist()\n\n  _save: ->\n    @persist()\n    @model.bind 'sync', =>\n      @$el.modal('hide')\n\n  persist: ->\n    @model.set\n      territoryno: @$('#ed-territoryno').val()\n      markerno: (Number) @$('#ed-markerno').val()\n      blockno: @$('#ed-blockno').val()\n      interestlevel: (Number) @$('#ed-interestlevel').val()\n      houseno: @$('#ed-houseno').val()\n      description: @$('#ed-description').val()\n      languages: @$('#ed-languages').val()\n      persons: @$('#ed-persons').val()\n      notes: @$('#ed-notes').val()\n      actions: @$('#ed-actions').val()\n    @model.save()\n",
			"file": "static/js/app.coffee",
			"file_size": 6887,
			"file_write_time": 129751961316305416,
			"settings":
			{
				"buffer_size": 6665,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nCR = \"10.001025 -84.134588\" # no space between\n\n@DefaultParams =\n  user_id: 0\n  username: \"\"\n  api_key: \"\"\n  format: \"json\"\n  limit: 0\n\nclass @AppData extends Backbone.Model\n  defaults:\n    center: CR\n    zoom: 16\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n\n  initialize: (attributes) ->\n    ll = attributes.center.split(',')\n    @set('centerLat', ll[0])\n    @set('centerLng', ll[1])\n\n# A place has a location\nclass @Place extends Backbone.Model\n  defaults:\n    notes: ''\n\n  # Fear the XSS.\n  escapedJson: ->\n    return json =\n        id: @get \"id\"\n\n  initialize: (attributes) ->\n    match = attributes.point?.match(/(\\-?\\d+(?:\\.\\d+)?)\\s(\\-?\\d+(?:\\.\\d+)?)/)\n    if match?\n      @set('lat', match[1])\n      @set('lng', match[2])\n\n    params = {}\n    params = $.param(_.defaults(params, DefaultParams))\n    if @has('resource_uri')\n      @url = @get('resource_uri') + \"?#{params}\"\n\n    @bind 'change', @recalcPoint\n\n  recalcPoint: =>\n    if @hasChanged('lat') or @hasChanged('lng')\n      lat = @get('lat')\n      lng = @get('lng')\n      @set('point', \"POINT(#{lat} #{lng})\")\n\n  toJSON: ->\n    point: @get('point')\n    territoryno: @get('territoryno') || '4-1-2' \n    markerno: @get('markerno')\n    blockno: @get('blockno')\n    houseno: @get('houseno')\n    description: @get('description')\n    languages: @get('languages')\n    persons: @get('persons')\n    notes: @get('notes')\n    interestlevel: @get('interestlevel')\n    actions: @get('actions')\n\nclass @Places extends Backbone.Collection\n  model: Place\n\n  initialize: (models, options) ->\n    @queryParams = {}\n    @resetUrl()\n\n  setQueryParam: (name, value) ->\n    @queryParams[name] = value\n    @resetUrl()\n\n  resetUrl: ->\n    params = $.param(_.defaults(@queryParams, DefaultParams))\n    #\n    # Would like to determine bounds of points in this collection and then set center and best fit zoom\n    #\n    @url = \"/api/v1/place/?#{params}\"\n\n  show: ->\n    @trigger 'show'\n    @each (place) => place.trigger 'show'\n\n  hide: ->\n    @trigger 'hide'\n    @each (place) => place.trigger 'hide'\n\nclass @PlaceType extends Backbone.Model\n  idAttribute: 'id'\n\n  initialize: ->\n    @places = new Places()\n\n    # params = {}\n    # params = $.param(_.defaults(params, DefaultParams))\n    # @places.url = \"/api/v1/place/?#{params}\"\n    #?username=larry;api_key=d65af2857fc77e4ce56299e53f6858178dfab295\n\n  show: ->\n    @trigger 'show'\n    @places.show()\n\n  hide: ->\n    @trigger 'hide'\n    @places.hide()\n\nclass @PlaceTypes extends Backbone.Collection\n  model: PlaceType\n",
			"file": "static/js/models.coffee",
			"file_size": 2621,
			"file_write_time": 129752918233324580,
			"settings":
			{
				"buffer_size": 2507,
				"line_ending": "Windows"
			}
		},
		{
			"file": "apps/map/views.py",
			"settings":
			{
				"buffer_size": 1688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/places/models.py",
			"settings":
			{
				"buffer_size": 13781,
				"line_ending": "Windows"
			}
		},
		{
			"file": "apps/places/api.py",
			"settings":
			{
				"buffer_size": 1536,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/CoffeeScript/Commands/CoffeeScript.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				":W",
				":w - Save"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pack	",
				"Package Control: Install Package"
			],
			[
				"java",
				"Format: Javascript"
			],
			[
				"Snippet: bd",
				"Snippet: <bdo>"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"",
				"HTML: Encode Special Characters"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prev",
				"Markdown Preview: current file in browser"
			],
			[
				"mark",
				"Markdown Preview: current file in browser"
			],
			[
				"previ",
				"Markdown Preview: current file in Sublime Text"
			],
			[
				"fetch",
				"Fetch: Manage remote files"
			],
			[
				"fet",
				"Fetch: Manage remote files"
			],
			[
				"package",
				"Package Control: Add Repository"
			],
			[
				"mar",
				"Set Syntax: Markdown"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 107.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Larry/__prjs/ourfield/apps/places/tests.py",
		"/C/Users/Larry/__prjs/ourfield/settings.py",
		"/C/Users/Larry/__prjs/ourfield/apps/places/commands.py",
		"/C/Users/Larry/__prjs/ourfield/fixtures/places_testdata.yaml",
		"/C/Users/Larry/__prjs/ourfield/templates/map/edit-info-window-template.html",
		"/C/Users/Larry/__prjs/ourfield/private/py/ptIsBetween.py",
		"/C/Users/Larry/__prjs/ourfield/apps/places/fixtures/places_testdata.yaml",
		"/C/Users/Larry/__prjs/ourfield/parts/better_yaml.py",
		"/C/Users/Larry/__prjs/ourfield/apps/places/fixtures/places_testdata.ymal",
		"/C/Users/Larry/__prjs/ourfield/apps/places/fixtures/places_testdata.json",
		"/C/Users/Larry/__prjs/ourfield/private/fixtures/places_testdata.json",
		"/C/Users/Larry/__prjs/ourfield/static/js/models.js",
		"/C/Users/Larry/__prjs/ourfield/templates/map/info-window-template.html",
		"/C/Users/Larry/__prjs/ourfield/apps/places/models.py",
		"/C/Users/Larry/__prjs/ourfield/templates/site_base.html",
		"/C/Users/Larry/__prjs/ourfield/static/css/map.css",
		"/C/Users/Larry/__prjs/ourfield/static/css/theme.css",
		"/C/Users/Larry/__prjs/ourfield/templates/map/base.html",
		"/C/Users/Larry/__prjs/ourfield/ve/Lib/site-packages/pinax_theme_bootstrap/static/pinax/css/theme.css",
		"/C/Users/Larry/__prjs/ourfield/apps/map/views.py",
		"/C/Users/Larry/__prjs/ourfield/docs/MarkerNos.md",
		"/C/Users/Larry/__prjs/ourfield/ve/Lib/site-packages/pinax_theme_bootstrap/static/bootstrap/less/responsive.less",
		"/C/Users/Larry/__prjs/ourfield/ve/Lib/site-packages/pinax_theme_bootstrap/static/bootstrap/css/bootstrap-responsive.css",
		"/C/Users/Larry/__prjs/ourfield/ve/Lib/site-packages/pinax_theme_bootstrap/static/bootstrap/less/navbar.less",
		"/C/Users/Larry/__prjs/ourfield/templates/map/crosshair.html",
		"/C/Users/Larry/__prjs/ourfield/static/js/jquery.cookie.js",
		"/C/Users/Larry/__prjs/ourfield/fabfile.py",
		"/C/Users/Larry/__prjs/ourfield/templates/homepage.html",
		"/C/Users/Larry/__prjs/ourfield/apps/places/admin.py",
		"/C/Users/Larry/__prjs/ourfield/apps/places/api.py",
		"/C/Users/Larry/__prjs/ourfield/static/js/app.coffee",
		"/C/Users/Larry/__prjs/ourfield/local_settings.py",
		"/C/Users/Larry/__prjs/ourfield_2/settings.py",
		"/C/Users/Larry/__prjs/ourfield_2/local_settings.py",
		"/C/Users/Larry/__prjs/z_others/django-backbone-example/backbone_example/templates/index.html",
		"/C/Users/Larry/__prjs/ourfield/templates/profiles/_profile_item.html",
		"/C/Users/Larry/__prjs/ourfield/.gitignore",
		"/C/Users/Larry/AppData/Roaming/Sublime Text 2/Packages/TodoManager/TodoManager.sublime-settings",
		"/C/Users/Larry/__prjs/ourfield/ve/Lib/site-packages/pinax_theme_bootstrap/templates/subnav_base.html",
		"/C/Users/Larry/__prjs/ourfield/static/js/app_map_sample.coffee",
		"/C/Users/Larry/__prjs/ourfield/private/lwe_scratch_notes_onmodels_etc.md",
		"/C/Users/Larry/__prjs/ourfield/docs/lwe_scratch_notes_onmodels_etc.md",
		"/C/Users/Larry/__prjs/ourfield/static/js/ICanHaz.min.js",
		"/C/Users/Larry/__prjs/z_others/_b/index.html",
		"/C/Users/Larry/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Larry/AppData/Roaming/Sublime Text 2/Packages/Tag/Tag Package.sublime-settings",
		"/C/Users/Larry/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/Larry/__prjs/ourfield/static/js/backbone-tastypie.js",
		"/C/Users/Larry/__prjs/ourfield/static/js/crosshair.coffee",
		"/C/Users/Larry/__prjs/ourfield/static/js/backbone.js",
		"/C/Users/Larry/__prjs/ourfield/static/js/routes.js",
		"/C/Users/Larry/My Dropbox/ourfield/github_fltsys/private/js/underscore.js",
		"/C/Users/Larry/My Dropbox/ourfield/github_fltsys/private/js/backbone.js",
		"/C/Users/Larry/My Dropbox/ourfield/github_fltsys/private/js/backbone-tastypie.js",
		"/C/Users/Larry/__prjs/ourfield/apps/en/urls.py",
		"/C/Users/Larry/My Dropbox/ourfield/github_fltsys/private/js/gmap4.html",
		"/C/Users/Larry/__prjs/ourfield/private/data/dat/geo_names/featureCodes_en.txt",
		"/C/Users/Larry/__prjs/ourfield/private/data/dat/geo_names/boundary_types.txt",
		"/C/Users/Larry/__prjs/ourfield/private/data/dat/geo_names/geonames_allcountries.txt",
		"/C/Users/Larry/__prjs/ourfield/apps/en/views.py",
		"/C/Users/Larry/__prjs/ourfield/apps/en/api.py",
		"/C/Users/Larry/__prjs/ourfield/urls.py",
		"/C/Users/Larry/__prjs/ourfield/apps/en/models.py",
		"/C/Users/Larry/__prjs/ourfield_2/apps/en/views.py",
		"/C/Users/Larry/__prjs/ourfield/apps/places/urls.py",
		"/C/Users/Larry/__prjs/ourfield_2/apps/en/urls.py",
		"/C/Users/Larry/__prjs/ourfield_2/apps/en/note.py",
		"/C/Users/Larry/__prjs/ourfield_2/apps/en/models.py",
		"/C/Users/Larry/__prjs/ourfield_2/apps/home/views.py",
		"/C/Users/Larry/__prjs/ourfield/.idea/workspace.xml",
		"/C/Users/Larry/__prjs/ourfield/fixtures/initial_data.json",
		"/C/Users/Larry/__prjs/ourfield/ve/Lib/site-packages/pinax_theme_bootstrap/templates/theme_base.html",
		"/C/Users/Larry/__prjs/ourfield/static/js/app.js",
		"/C/Users/Larry/__prjs/z_others/_b/javascripts/models.coffee",
		"/C/Users/Larry/__prjs/z_others/Python-Webserver/webserver.py",
		"/C/Users/Larry/__prjs/ourfield/wc.bat",
		"/C/Users/Larry/__prjs/z_others/_b/javascripts/app.coffee",
		"/C/Users/Larry/My Dropbox/OurField Umair/larry_django/ourfield/apps/places/api.py",
		"/C/Users/Larry/My Dropbox/OurField Umair/larry_django/ourfield/apps/places/models.py",
		"/C/Users/Larry/__prjs/z_others/mapx/js/app.js",
		"/C/Users/Larry/__prjs/ourfield/scripts/coffee/app_last.coffee",
		"/C/Users/Larry/__prjs/ourfield/scripts/coffee/app_save.coffee",
		"/C/Users/Larry/__prjs/z_others/_b/javascripts/example_map.coffee",
		"/C/Users/Larry/__prjs/z_others/_b/javascripts/markers.coffee",
		"/C/Users/Larry/My Dropbox/OurField Umair/larry_django/ourfield/urls.py",
		"/C/Users/Larry/__prjs/z_others/memento/public/js/map.coffee",
		"/C/Users/Larry/__prjs/z_others/memento/app.coffee",
		"/C/Users/Larry/__prjs/z_others/django-backbone-example/backbone_example/static/js/backbone-tastypie.js",
		"/C/Users/Larry/__prjs/z_others/Django-Backbone-Playground/static/js/app.js",
		"/C/Users/Larry/__prjs/z_others/_b/robots.txt",
		"/C/Users/Larry/__prjs/z_others/chicago_crimes/app/assets/javascripts/map.js.coffee",
		"/C/Users/Larry/AppData/Roaming/Sublime Text 2/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/C/Users/Larry/__prjs/z_others/memento/models.coffee",
		"/C/Users/Larry/__prjs/z_others/Koffeeban/app/assets/javascripts/controllers/lanes-controller.js.coffee",
		"/C/Users/Larry/__prjs/ourfield/static/js/_models_try.coffee",
		"/C/Users/Larry/__prjs/z_others/_b/javascripts/backbone-tastypie.js",
		"/C/Users/Larry/__prjs/z_others/backbone-skeleton_2/index.html",
		"/C/Users/Larry/__prjs/z_others/_b/web_server.coffee",
		"/C/Users/Larry/__prjs/z_others/_b/coffee.bat",
		"/C/Users/Larry/__prjs/z_others/_b/javascripts/app.js",
		"/C/Users/Larry/__prjs/z_others/Python-Webserver/config.ini",
		"/C/Users/Larry/__prjs/z_others/_b/javascripts/jquery-1.7.1.min.js",
		"/C/Users/Larry/__prjs/ourfield/static/js/models.coffee",
		"/C/Users/Larry/__prjs/z_others/_b/stylesheets/map.css",
		"/C/Users/Larry/__prjs/z_others/_b/wc.bat",
		"/C/Users/Larry/__prjs/z_others/Koffeeban/app/assets/javascripts/models/cards.js.coffee",
		"/C/Users/Larry/__prjs/z_others/Koffeeban/app/assets/javascripts/application.js",
		"/C/Users/Larry/__prjs/z_others/memento/public/js/underscore.js",
		"/C/Users/Larry/My Dropbox/__TempOurField/urls.py",
		"/C/Users/Larry/Desktop/example.com   Map.htm",
		"/C/Users/Larry/__prjs/ourfield/templates/tweets/index.html",
		"/C/Users/Larry/__prjs/ourfield/scripts/coffee/tweets.coffee",
		"/C/Users/Larry/__prjs/ourfield/static/js/routes.coffee",
		"/C/Users/Larry/__prjs/ourfield/templates/map/base__.html",
		"/C/Users/Larry/__prjs/ourfield/scripts/coffee/routes.coffee",
		"/C/Users/Larry/__prjs/ourfield/templates/map/base_2.html",
		"/C/Users/Larry/__prjs/z_others/django-backbone-example/backbone_example/urls.py",
		"/C/Users/Larry/__prjs/ourfield/apps/tweets/views.py",
		"/C/Users/Larry/__prjs/ourfield/apps/tweets/api.py_",
		"/C/Users/Larry/__prjs/ourfield/apps/api/views.py",
		"/C/Users/Larry/__prjs/ourfield/apps/tweets/urls.py",
		"/C/Users/Larry/__prjs/ourfield/apps/api/models.py",
		"/C/_extjs/ext-4.0.7-gpl/index.html",
		"/C/Users/Larry/__prjs/ourfield/apps/tweets/models.py",
		"/C/Users/Larry/__prjs/ourfield/static/js/tweets.coffee",
		"/C/Users/Larry/__prjs/ourfield/apps/tweets/api.py",
		"/C/Users/Larry/__prjs/ourfield/static/js/tweets.js",
		"/C/Users/Larry/__prjs/ourfield/coffee.bat"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"C:\\Users\\Larry\\__prjs\\ourfield\\ve\\Lib\\site-packages\\pinax_theme_bootstrap",
			"C:\\Users\\Larry\\__prjs\\ourfield",
			"C:\\Users\\Larry\\__prjs\\ourfield_2",
			"C:\\Users\\Larry\\__prjs\\ourfield",
			"C:\\Users\\Larry\\__prjs\\ourfield\\scripts",
			"C:\\Users\\Larry\\__prjs\\z_others\\memento",
			"C:\\Users\\Larry\\__prjs\\ourfield\\apps",
			"C:\\Users\\Larry\\AppData\\Roaming\\Sublime Text 2\\Packages\\Terminal",
			"C:\\Users\\Larry\\AppData\\Roaming\\Sublime Text 2\\Packages\\SideBarEnhancements",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"MKN",
			"Ps",
			"P",
			"appData",
			"appdata",
			"#",
			"static",
			"navbar-fixed-top",
			"territoryno",
			"territory",
			"beautifulsoup",
			"DefaultParams",
			"AppData",
			"username",
			"profile.name",
			"limit",
			"close",
			"center",
			"cursor",
			"addListener",
			"click",
			"getPosition",
			"listen",
			"lon",
			"readOnlyHtml",
			"handleAction",
			"marker",
			"Marker",
			"\\",
			"ll",
			"z",
			"position",
			"zoom",
			"AppData",
			"model",
			"google",
			"urlRoot",
			"root",
			"tweet_resource",
			"v1",
			"jsapp",
			"MapView",
			"sendActionToMarker",
			"options",
			"getDiv",
			"memories",
			"memory",
			"Memory",
			"vi?w",
			"this",
			"view",
			"power",
			"terminal",
			"powershell",
			"delete",
			"\")",
			"map",
			"NewYorkLocation",
			"is_ajax",
			"id",
			"PaneView",
			"radius",
			"mapx-app",
			"map-container",
			"mapx-app",
			"updateZones",
			"var",
			"cmd",
			"path"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"markerno",
			"Places",
			"Place",
			"0",
			"user.is_authenticated",
			"lng",
			"place",
			"Place",
			"/",
			"center",
			"zoom",
			"tweet_resource",
			"AppView",
			"places",
			"place",
			"Place",
			"CR"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "private/py/closestpt.py",
					"settings":
					{
						"buffer_size": 2511,
						"regions":
						{
						},
						"selection":
						[
							[
								2446,
								1832
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 300.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "static/js/calcmarkerno.coffee",
					"settings":
					{
						"buffer_size": 3318,
						"regions":
						{
						},
						"selection":
						[
							[
								699,
								699
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CoffeeScript/Syntaxes/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/map/base.html",
					"settings":
					{
						"buffer_size": 3566,
						"regions":
						{
						},
						"selection":
						[
							[
								1438,
								1438
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 570.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "static/js/app.coffee",
					"settings":
					{
						"buffer_size": 6665,
						"regions":
						{
						},
						"selection":
						[
							[
								3602,
								3602
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CoffeeScript/Syntaxes/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1759.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "static/js/models.coffee",
					"settings":
					{
						"buffer_size": 2507,
						"regions":
						{
						},
						"selection":
						[
							[
								1453,
								1459
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CoffeeScript/Syntaxes/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "apps/map/views.py",
					"settings":
					{
						"buffer_size": 1688,
						"regions":
						{
						},
						"selection":
						[
							[
								1390,
								1390
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "apps/places/models.py",
					"settings":
					{
						"buffer_size": 13781,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 525.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "apps/places/api.py",
					"settings":
					{
						"buffer_size": 1536,
						"regions":
						{
						},
						"selection":
						[
							[
								800,
								800
							]
						],
						"settings":
						{
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.sftp":
	{
		"height": 0.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/C/Users/Larry/__prjs/ourfield/templates/map/ourfield.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 183.0,
	"status_bar_visible": true
}
